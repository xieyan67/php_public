#!/usr/bin/expect

#设置超时时间(秒)
set timeout 30

#机器列表
set hostList {
    {
        test.17kaojiaoshi.com
        tsingzone
        TsingZone2015
        测试环境机器
    }
}

#机器列表长度
set hostLength [llength $hostList]

#输出信息(用双引号引起来，否则空格需要转义)
send_user "which host do you want to go ?\n"
for {set i 0} {$i<$hostLength} {incr i} {
    set hostN [lindex $hostList $i]
    set hostName [lindex $hostN 0]
    set hostDesc [lindex $hostN 3]
    send_user "$i $hostName ($hostDesc)\n"
}

#生成判断用户输入的字符串，大致是下面的样子
#{
#    -re (^|\n)0\n {set whichHost 0}
#    -re (^|\n)1\n {set whichHost 1}
#    ......
#}
set expectUser {}
for {set i 0} {$i<$hostLength} {incr i} {
    #append 字符串追加
    append expectUser "\n    -re (^|\\n)$i\\n {set whichHost $i}"
}
append expectUser \n

#等待用户输入
expect_user $expectUser

#执行SSH登录机器
set hostN [lindex $hostList $whichHost]
set userName [lindex $hostN 1]
set hostName [lindex $hostN 0]
set password [lindex $hostN 2]
spawn ssh $userName@$hostName
expect {
    #第一次登录机器会询问yes/no exp_continue可以使该项被匹配后，还能继续匹配该 expect 判断语句内的其他项
    "yes/no" {send "yes\n";exp_continue}
    "password" {send "$password\n"}
}

#执行完成后保持交互状态，把控制权交给控制台 如果没有这一句登录完成后会退出，而不是留在远程终端上
interact